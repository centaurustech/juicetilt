# Scaffolding generated by Casein v5.0.0.0

module Casein
  class CampaignsController < Casein::CaseinController
  
    ## optional filters for defining usage according to Casein::AdminUser access_levels
    # before_filter :needs_admin, :except => [:action1, :action2]
    # before_filter :needs_admin_or_current_user, :only => [:action1, :action2]
  
    def index
      @casein_page_title = 'Campaigns'
  		@campaigns = Campaign.order(sort_order(:user_id)).paginate :page => params[:page]
    end
  
    def show
      @casein_page_title = 'View campaign'
      @campaign = Campaign.find params[:id]
    end
  
    def new
      @casein_page_title = 'Add a new campaign'
    	@campaign = Campaign.new
    end

    def create
      @campaign = Campaign.new campaign_params
    
      if @campaign.save
        flash[:notice] = 'Campaign created'
        redirect_to casein_campaigns_path
      else
        flash.now[:warning] = 'There were problems when trying to create a new campaign'
        render :action => :new
      end
    end
  
    def update
      @casein_page_title = 'Update campaign'
      
      @campaign = Campaign.find params[:id]
    
      if @campaign.update_attributes campaign_params
        flash[:notice] = 'Campaign has been updated'
        redirect_to casein_campaigns_path
      else
        flash.now[:warning] = 'There were problems when trying to update this campaign'
        render :action => :show
      end
    end
 
    def destroy
      @campaign = Campaign.find params[:id]

      @campaign.destroy
      flash[:notice] = 'Campaign has been deleted'
      redirect_to casein_campaigns_path
    end
  
    private
      
      def campaign_params
        params.require(:campaign).permit(:user_id, :created_at, :project_title, :funding_duration, :funding_goal, :legal_first_name, :legal_last_name, :phone_number)
      end

  end
end